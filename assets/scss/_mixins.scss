/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}


// shamelessly ripped from Foundation
@function rem-calc($values, $base: null) {
  $rem-values: ();
  $count: length($values);

  // If no base is defined, defer to the global font size
  @if $base == null {
    $base: $global-font-size;
  }

  // If the base font size is a %, then multiply it by 16px
  // This is because 100% font size = 16px in most all browsers
  @if unit($base) == '%' {
    $base: ($base / 100%) * 16px;
  }

  // Using rem as base allows correct scaling
  @if unit($base) == 'rem' {
    $base: strip-unit($base) * 16px;
  }

  @if $count == 1 {
    @return -zf-to-rem($values, $base);
  }

  @for $i from 1 through $count {
    $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));
  }

  @return $rem-values;
}

// breakpoints 

 @mixin breakpoint($point) {
   @if $point == desktop {
     @media (min-width: $desktopbreak) { @content ; }
  }
   @else if $point == laptop {
     @media (min-width: $laptopbreak) { @content ; }
  }
    @else if $point == tablet {
     @media (min-width: $tabletbreak) { @content ; }
  }
   @else if $point == phablet {
     @media (min-width: $phabletbreak)  { @content ; }
  }
  @else if $point == mobileonly {
     @media (max-width: $mobilebreak)  { @content ; }

  }
}